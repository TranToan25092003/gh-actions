name: using reuseable workflow
on:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true' # only run if cache is not hit
        run: npm ci
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report # only upload if tests fail
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true' # only run if cache is not hit
        run: npm ci
      - name: Build website
        id: build-website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist

  deploy:
    needs: build
    uses: ./.github/workflows/reuseable.yml # use the reuseable workflow
    with: # pass the input to the reuseable workflow
      artifact-name: dist-files
    # secrets:
    #   token: ${{ secrets.TOKEN }}

  output-reuse:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: print output
        run: echo "${{ needs.deploy.outputs.reuse-output}}"

  report:
    needs: [deploy, lint]
    if: failure() # only run if tests fail
    runs-on: ubuntu-latest
    steps:
      - name: get report
        run: |
          echo 'getting report'
          echo '${{toJson(github)}}'
